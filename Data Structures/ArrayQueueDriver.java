// CMPS390// ArrayQueueDriver.java// Kuo-pao Yangpublic class ArrayQueueDriver {	public static void main(String[] args) {		testQueueOperations();	}  // end main	public static void testQueueOperations()	{		System.out.println("Create a queue: ");		ArrayQueue myQueue = new ArrayQueue();		System.out.println("isEmpty() returns " + myQueue.isEmpty());				System.out.println("\nTesing enqeue:" + " Austin Cory Jason");		myQueue.enqueue("Austin");		myQueue.enqueue("Cory");		myQueue.enqueue("Jason");		System.out.println("isEmpty() returns " + myQueue.isEmpty());		System.out.println("\n\nTesting getFront and dequeue:");		while (!myQueue.isEmpty())		{			String front = (String) myQueue.getFront();			System.out.println(front + " is at the front of the queue.");						front = (String) myQueue.dequeue();			System.out.println(front + " is removed from the front of the queue.\n");		} // end while		System.out.println("After getFront and dequeue, the queue should be empty: ");		System.out.println("isEmpty() returns " + myQueue.isEmpty());		System.out.println("\n\nTesting clear: ");		System.out.println("Add to stack:" + " Ericka Jassica Megan");		myQueue.enqueue("Ericka");		myQueue.enqueue("Jassica");		myQueue.enqueue("Megan");		myQueue.clear();		System.out.println("After clear, the queue should be empty: ");		System.out.println("isEmpty() returns " + myQueue.isEmpty());			} // end testQueueOperations}  // end ArrayQueueDriver